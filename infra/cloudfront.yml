Description: Set up CloudFront Distribution and Route53 DNS for the static site

Resources:
  CloudFrontLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/cloudfront/static-site-logs
      RetentionInDays: 7

  CloudFrontLoggingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "CloudFrontLoggingPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !GetAtt CloudFrontLogsGroup.Arn

  MyCloudFrontOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: "CloudFrontOAC"
        Description: "OAC for S3 bucket access"
        OriginAccessControlOriginType: "s3"
        SigningBehavior: "never" # Can be "always" for signed URLs (for signed content)
        SigningProtocol: "sigv4" # Use AWS Signature Version 4 (sigv4)

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: S3Origin
            DomainName: !ImportValue S3BucketDomainName
            S3OriginConfig:
              # AWS docs instruct to leave this field empty if using OAC instead of OAI
              OriginAccessIdentity: ""
            OriginAccessControlId: !Ref MyCloudFrontOAC # Use OAC here
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https # Ensure HTTPS is enforced
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false # Do not forward query strings to S3
            Cookies:
              Forward: none # Do not forward cookies
        ViewerCertificate:
          AcmCertificateArn: !ImportValue MySSLCertificateStack-CertificateArn
          SslSupportMethod: sni-only
        Enabled: true
        DefaultRootObject: index.html
        HttpVersion: http2
        PriceClass: PriceClass_100 # Use the cheapest price class (optional)
        Logging:
          IncludeCookies: false
          Bucket: !ImportValue CloudFrontLogS3BucketNameDomainName # S3 Bucket Policy to allow CloudFront access

  CloudFrontAccessS3Policy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: static-site.jiwanheo.xyz
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowCloudFrontAccess"
            Effect: "Allow"
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: "s3:GetObject"
            Resource: arn:aws:s3:::static-site.jiwanheo.xyz/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}

  # Route53DNSRecord:
  #   Type: AWS::Route53::RecordSet
  #   Properties:
  #     HostedZoneId: Z066358329E65RHIEOJXQ # Replace with your actual hosted zone ID
  #     Name: static-site.jiwanheo.xyz
  #     Type: A
  #     AliasTarget:
  #       DNSName: !GetAtt CloudFrontDistribution.DomainName # CloudFront distribution domain name
  #       HostedZoneId: Z2FDTNDATAQYW2
# Outputs:
#   CloudFrontDomainName:
#     Description: CloudFront Distribution Domain Name
#     Value: !GetAtt CloudFrontDistribution.DomainName
